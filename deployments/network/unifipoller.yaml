#@ load("@ytt:base64", "base64")
#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Secret
metadata:
  name: unifipoller
  namespace: network
data:
  username: #@ base64.encode(data.values.username.strip())
  password: #@ base64.encode(data.values.password.strip())
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifipoller
  namespace: network
  labels:
    app: unifipoller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: unifipoller
  template:
    metadata:
      labels:
        app: unifipoller
    spec:
      containers:
      - name: unpoller
        image: ghcr.io/unpoller/unpoller
        env:
        - name: UP_PROMETHEUS_DISABLE
          value: "false"
        - name: UP_PROMETHEUS_HTTP_LISTEN
          value: "0.0.0.0:8080"
        - name: UP_INFLUXDB_DISABLE
          value: "true"
        - name: UP_UNIFI_DEFAULT_URL
          value: "https://192.168.1.2"
        - name: UP_UNIFI_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: unifipoller
              key: username
        - name: UP_UNIFI_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: unifipoller
              key: password
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: unifipoller
  name: unifipoller
  namespace: network
spec:
  type: ClusterIP
  ports:
  - name: prometheus
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: unifipoller
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: unifipoller
  namespace: network
  labels:
    instance: primary
spec:
  endpoints:
  - honorLabels: true
    interval: 60s
    path: /metrics
    port: prometheus
    metricRelabelings:
    - action: keep
      regex: unpoller_site_(.+)
      sourceLabels:
      - __name__
    relabelings:
    - action: replace
      replacement: unifipoller
      targetLabel: job
  namespaceSelector:
    matchNames:
    - network
  selector:
    matchLabels:
      app: unifipoller
